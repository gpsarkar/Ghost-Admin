define('spirit-product', ['exports'], function (exports) { 'use strict';

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var button = function buttonStyles(options) {
        let button = 'dib midgrey btn-base br3 ba b--lightgrey-l1 pointer glow';
        let span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';

        options = options || {};

        // Set style
        if (options.style) {
            switch (options.style) {
            case 'outline-white':
            case 'outline-white--s':
                button = 'bg-transparent dib white btn-base br3 ba b--white-60 pointer highlight-white';
                span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';
                break;
            case 'outline-blue':
            case 'outline-blue--s':
                button = 'bg-transparent dib blue btn-base br3 ba b--lightgrey pointer glow';
                span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';
                break;
            case 'blue':
            case 'blue--s':
                button = 'dib bw0 white br3 btn-base btn-blue pointer';
                span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';
                break;
            case 'green':
            case 'green--s':
                button = 'dib bw0 white br3 btn-base btn-green pointer';
                span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';
                break;
            case 'red':
            case 'red--s':
                button = 'dib bw0 white br3 btn-base btn-red pointer';
                span = 'f8 fw5 tracked-2 dib pt0 pb0 tc';
                break;
            }

            // Style ending with '--s' means small button
            if (options.style.substr(options.style.length - 3) === '--s') {
                button = button + ' btn-small';
            }
        }

        if (options.class) {
            button = button + ' ' + options.class;
        }

        button = 'sans-serif ' + button + ' flex-shrink-0';
        span = span + ' inline-flex items-center';

        return {
            button: button,
            span: span
        };
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var koenig = function koenigStyles(style, options) {
        let cssClass = '';

        let pFontStyle = 'f3 fw3 lh-copy tracked-1 serif';
        let cardBorderStyle = 'pt1 pb1 pl6 nl6 pr6 nr6 ba b--white relative kg-card-left-border kg-card-hover';

        switch (style) {
        // Card menu
        case 'cardmenu':
            cssClass = 'koenig-cardmenu absolute top-0 flex flex-wrap justify-start mt0 mr0 mb5 ml0 pa4 overflow-y-auto bg-white br3 shadow-3 ttn f7 normal';
            break;

        case 'cardmenu-card':
            cssClass = 'flex flex-column justify-center items-center w20 h19 br3 midgrey ba b--transparent hover-darkgrey kg-cardmenu-card-hover pt1 anim-fast';
            break;

        case 'cardmenu-icon':
            cssClass = 'flex items-center';
            break;

        case 'cardmenu-label':
            cssClass = 'f-supersmall tracked-1 fw1 ma0 mt1';
            break;

        // Container cards
        case 'container-card':
            cssClass = cardBorderStyle;
            break;

        // Generic media card
        case 'media-card':
            cssClass = pFontStyle + ' ma0 ba b--transparent kg-card-hover';
            break;

        // Media styles & figure caption
        case 'image-normal':
            cssClass = 'center db';
            break;
        case 'image-wide':
            cssClass = 'center mw-100 db';
            break;
        case 'image-full':
            cssClass = 'center mw-100vw db';
            if (options.sidebar) {
                cssClass = cssClass + ' kg-image-full--sidebar';
            }
            break;
        case 'figcaption':
            cssClass = 'db pa2 center lh-title sans-serif fw4 f7 middarkgrey tracked-2 tc';
            break;

        // Media breakout styles
        case 'breakout':
            if (options.size === 'wide') {
                cssClass = cssClass + ' koenig-breakout-wide';
            }
            if (options.size === 'full') {
                cssClass = cssClass + ' koenig-breakout-full';
            }
            break;
        }

        return cssClass;
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var uiText = function textStyles(style) {
        let cssClass = '';

        switch (style) {
        case 'h1':
            cssClass = 'f-subheadline fw7 tracked-3 lh-heading ma0 pa0';
            break;
        case 'h2':
            cssClass = 'f2 fw6 tracked-2 tracked-3 lh-title ma0 pa0';
            break;
        case 'h3':
            cssClass = 'f5 fw6 tracked-2 lh-title ma0 pa0';
            break;
        case 'h4':
            cssClass = 'f7 fw6 tracked-2 lh-copy ma0 pa0';
            break;
        case 'h5':
            cssClass = 'f8 fw6 tracked-2 lh-copy ma0 pa0';
            break;
        case 'h6':
            cssClass = 'f-small ttu fw4 tracked-3 lh-copy ma0 pa0';
            break;
        case 'tl':
            cssClass = 'f6 fw3 lh-copy tracked-1 ma0 pa0';
            break;
        case 't':
            cssClass = 'f7 fw3 lh-copy tracked-1 ma0 pa0';
            break;
        case 'ts':
            cssClass = 'f8 fw3 lh-copy tracked-2 ma0 pa0';
            break;
        case 'txs':
            cssClass = 'f-small fw3 lh-copy tracked-3 ma0 pa0';
            break;
        }

        return cssClass;
    };

    var styles = {
        button: button,
        koenig: koenig,
        uiText: uiText
    };
    var styles_1 = styles.button;
    var styles_2 = styles.koenig;
    var styles_3 = styles.uiText;

    exports.default = styles;
    exports.button = styles_1;
    exports.koenig = styles_2;
    exports.uiText = styles_3;

    Object.defineProperty(exports, '__esModule', { value: true });

});
