define('spirit-brand', ['exports'], function (exports) { 'use strict';

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var box = function boxStyles(style) {
        let cssClass = '';

        switch (style) {
        // Links
        default:
        case 'outline':
            cssClass = 'ba br3';
            break;
        case 'outline-light':
            cssClass = 'ba br3 b--whitegrey';
            break;
        case 'outline-dark':
            cssClass = 'ba br3 b--white-40';
            break;
        case 'shadow-1':
            cssClass = 'br3 shadow-1';
            break;
        case 'shadow-1-strong':
            cssClass = 'br3 shadow-1-strong';
            break;
        case 'shadow-2':
            cssClass = 'br3 shadow-2';
            break;
        case 'shadow-3':
            cssClass = 'br3 shadow-3';
            break;
        case '':
            cssClass = '';
            break;
        }

        return cssClass;
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var button = function buttonStyles(options) {
        let button = 'dib midgrey btn-base br3 ba b--lightgrey-l1 pointer';
        let span = 'f8 fw5 dib pt0 pb0 tc';

        // Set style
        if (options.style) {
            switch (options.style) {
            case 'outline-white':
                button = 'bg-transparent dib white btn-base br3 ba b--white-60 pointer';
                span = 'f8 fw5 dib pt0 pb0 tc';
                break;
            case 'blue':
                button = 'dib bw0 white br3 btn-base btn-blue pointer';
                span = 'f8 fw5 dib pt0 pb0 tc';
                break;
            case 'green':
                button = 'dib bw0 white br3 btn-base btn-green pointer';
                span = 'f8 fw5 dib pt0 pb0 tc';
                break;
            }
        }

        if (options.class) {
            button = button + ' ' + options.class;
        }

        button = 'whitney ' + button + ' flex-shrink-0';
        span = span + ' inline-flex items-center';

        return {
            button: button,
            span: span
        };
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var card = function cardStyles(style) {
        let cssClass = '';

        switch (style) {
        // Links
        default:
        case 'outline':
            cssClass = 'ba br4';
            break;
        case 'outline-light':
            cssClass = 'ba br4 b--whitegrey';
            break;
        case 'outline-dark':
            cssClass = 'ba br4 b--white-40';
            break;
        case 'shadow-1':
            cssClass = 'br4 shadow-1';
            break;
        case 'shadow-1-strong':
            cssClass = 'br4 shadow-1-strong';
            break;
        case 'shadow-2':
            cssClass = 'br4 shadow-2';
            break;
        case 'shadow-3':
            cssClass = 'br4 shadow-3';
            break;
        case '':
            cssClass = '';
            break;
        }

        return cssClass;
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var dropdown = {
        container: function () {
            return 'gd-drop js-version relative dib';
        },

        content: function (size, dropup) {
            let cssClass = 'absolute z-999 bg-white br3 o-0 anim-slow shadow-1-strong darkgrey';

            switch (size) {
            case 'small':
                cssClass = cssClass + ' dd-w1';
                break;
            default:
            case 'medium':
                cssClass = cssClass + ' dd-w2';
                break;
            case 'large':
                cssClass = cssClass + ' dd-w3';
                break;
            }

            if (dropup === true) {
                cssClass = cssClass + ' dd-up';
            } else {
                cssClass = cssClass + ' trans-from-up';
            }

            return cssClass;
        }
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var form = function formStyles(element, options) {
        let cssClass = '';

        switch (element) {
        // Form container
        case 'container':
            cssClass = 'relative';
            break;

        // Label
        case 'label':
            cssClass = 'db f8 mb1';
            break;

        // Response
        case 'response':
            cssClass = 'absolute form-response ma0 f-supersmall';

            switch (options.status) {
            case 'info':
                break;
            case 'success':
                cssClass = cssClass + ' green';
                break;
            default:
                cssClass = cssClass + ' red';
            }

            break;

        // Text & password
        case 'text':
        case 'password':
            cssClass = 'db pa2 w-100 ba midgrey f8 fw4 br3 whitney form-text';

            switch (options.status) {
            case 'error':
                cssClass = cssClass + ' b--red';
                break;
            case 'success':
                cssClass = cssClass + ' b--green';
                break;
            case 'rest':
            default:
                cssClass = cssClass + ' b--lightgrey';
            }

            if (options.icon) {
                cssClass = cssClass + ' form-input-w-icon';
            }

            if (options['btn-embedded']) {
                cssClass = cssClass + ' form-input-w-button';
            }

            break;

        // Embedded button
        case 'btn-embedded':
            cssClass = 'db absolute top-2 form-btn-forgot br0 lightgrey f-supersmall fw4 whitney pointer hover-blue-l3';
            break;

        // Icon
        case 'icon':
            cssClass = 'ih2 absolute form-icon';

            switch (options.coloring) {
            default:
            case 'outline':
                switch (options.status) {
                case 'error':
                    cssClass = cssClass + ' stroke-red';
                    break;
                case 'success':
                    cssClass = cssClass + ' stroke-green-d2';
                    break;
                case 'rest':
                default:
                    cssClass = cssClass + ' stroke-lightgrey-d2';
                }
                break;
            case 'fill':
                switch (options.status) {
                case 'error':
                    cssClass = cssClass + ' fill-red';
                    break;
                case 'success':
                    cssClass = cssClass + ' fill-green-d2';
                    break;
                case 'rest':
                default:
                    cssClass = cssClass + ' fill-lightgrey-d2';
                }
                break;
            case 'none':
                break;
            }

            break;
        }

        return cssClass;
    };

    var link = function linkStyles(options) {
        let link = 'link blue-d1';
        let span = '';

        if (!options.class) {
            link = link + ' dim';
        }

        if (options.icon) {
            link = link + ' dib';
            span = 'inline-flex items-center justify-center ';
        }

        // Set style
        if (options.style) {
            switch (options.style) {
            default:
            case 'blue':
                link = 'link blue-d1 dim';
                break;
            case 'green':
                link = 'link green-d1 dim';
                break;
            case 'purple':
                link = 'link purple dim';
                break;
            case 'midgrey':
                link = 'link midgrey dim';
                break;
            case 'middarkgrey':
                link = 'link middarkgrey dim';
                break;
            case 'red':
                link = 'link red dim';
                break;
            case 'reset':
                link = '';
                break;

            // Button styles
            case 'btn-outline':
                link = 'dib midgrey btn-base br3 ba b--lightgrey-l1';
                span = span + 'f8 fw5 inline-flex items-center pt0 pb0 tc';
                break;
            case 'btn-outline-white':
                link = 'dib white btn-base br3 ba b--white-60';
                span = span + 'f8 fw5 inline-flex items-center pt0 pb0 tc';
                break;
            case 'btn-blue':
                link = 'dib bw0 white br3 btn-base btn-blue';
                span = span + 'f8 fw5 inline-flex items-center pt0 pb0 tc';
                break;
            case 'btn-green':
                link = 'dib bw0 white br3 btn-base btn-green';
                span = span + 'f8 fw5 inline-flex items-center pt0 pb0 tc';
                break;
            }
        }

        if (options.class) {
            link = link + ' ' + options.class;
        }

        return {
            link: link,
            span: span
        };
    };

    // NOTE: This gets pulled in verbatim with no transpilation in Ghost-Admin so
    // we need to stick to IE11 era JS, no template literals and so on

    var text = function textStyles(style) {
        let cssClass = '';

        switch (style) {
        // Typography
        case 'headline':
            cssClass = 'f-headline fw3 tracked-tight lh-title mh0';
            break;

        // Heading 1
        case 'h1':
            cssClass = 'f-subheadline fw3 tracked-tight lh-title';
            break;
        case 'h1-0':
            cssClass = 'f-subheadline fw3 tracked-tight lh-title tmb--0';
            break;
        case 'h1-p':
            cssClass = 'f-subheadline fw3 tracked-tight lh-title tmb--0-5x';
            break;
        case 'h1-h':
            cssClass = 'f-subheadline fw3 tracked-tight lh-title tmb--2-0x';
            break;

        // Heading 2
        case 'h2':
            cssClass = 'f2 fw4 tracked-tight-2 lh-title';
            break;
        case 'h2-0':
            cssClass = 'f2 fw4 tracked-tight-2 lh-title tmb--0';
            break;
        case 'h2-p':
            cssClass = 'f2 fw4 tracked-tight-2 lh-title tmb--0-25x';
            break;
        case 'h2-h':
            cssClass = 'f2 fw4 tracked-tight-2 lh-title tmb--0-5x';
            break;

        // Heading 3
        case 'h3':
            cssClass = 'f4 fw4 lh-copy';
            break;
        case 'h3-0':
            cssClass = 'f4 fw4 lh-copy tmb--0';
            break;
        case 'h3-p':
            cssClass = 'f4 fw4 lh-copy tmb--0-25x';
            break;
        case 'h3-h':
            cssClass = 'f4 fw4 lh-copy tmb--0-5x';
            break;

        // Heading 4
        case 'h4':
            cssClass = 'f6 fw5 lh-copy';
            break;
        case 'h4-0':
            cssClass = 'f6 fw5 lh-copy tmb--0';
            break;
        case 'h4-p':
            cssClass = 'f6 fw5 lh-copy tmb--0-25x';
            break;
        case 'h4-h':
            cssClass = 'f6 fw5 lh-copy tmb--0-5x';
            break;

        // Heading 5
        case 'h5':
            cssClass = 'f7 fw5 lh-copy';
            break;
        case 'h5-0':
            cssClass = 'f7 fw5 lh-copy tmb--0';
            break;
        case 'h5-p':
            cssClass = 'f7 fw5 lh-copy tmb--0-25x';
            break;
        case 'h5-h':
            cssClass = 'f7 fw5 lh-copy tmb--0-5x';
            break;

        // Paragraphs
        case 'p':
        case 'p-p':
            cssClass = 'f7 lh-copy';
            break;
        case 'p-0':
            cssClass = 'f7 lh-copy tmb--0';
            break;
        case 'p-h':
            cssClass = 'f7 lh-copy tmb--2-5x';
            break;

        case 'p-big':
        case 'p-big-p':
            cssClass = 'f6 lh-copy';
            break;
        case 'p-big-0':
            cssClass = 'f6 lh-copy tmb--0';
            break;
        case 'p-big-h':
            cssClass = 'f6 lh-copy tmb--2-5x';
            break;

        case 'p-small':
        case 'p-small-p':
            cssClass = 'f8 lh-copy';
            break;
        case 'p-small-0':
            cssClass = 'f8 lh-copy tmb--0';
            break;
        case 'p-small-h':
            cssClass = 'f8 lh-copy tmb--2-5x';
            break;
        }

        return cssClass;
    };

    var styles = {
        box: box,
        button: button,
        card: card,
        dropdown: dropdown,
        form: form,
        link: link,
        text: text
    };
    var styles_1 = styles.box;
    var styles_2 = styles.button;
    var styles_3 = styles.card;
    var styles_4 = styles.dropdown;
    var styles_5 = styles.form;
    var styles_6 = styles.link;
    var styles_7 = styles.text;

    exports.default = styles;
    exports.box = styles_1;
    exports.button = styles_2;
    exports.card = styles_3;
    exports.dropdown = styles_4;
    exports.form = styles_5;
    exports.link = styles_6;
    exports.text = styles_7;

    Object.defineProperty(exports, '__esModule', { value: true });

});
